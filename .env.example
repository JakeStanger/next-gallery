# === General ===

# database connection string
DATABASE_URL="mysql://user:password@localhost:3306/database"

# the directory to upload images into
# ignored if AWS variables set
UPLOAD_DIR=./uploads


# === Admin Authentication ===
# https://console.developers.google.com/apis/credentials

# site public url
NEXTAUTH_URL=

# google auth application keys
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# list of comma-separated to allow
# leave blank to fall back to auth application settings
AUTHORIZED_EMAILS=


# === STRIPE ===
# https://dashboard.stripe.com/apikeys

NEXT_PUBLIC_STRIPE_PUBLIC_KEY=
STRIPE_SECRET_KEY=


# === AWS ===
# Set these to use AWS S3 storage instead of local storage
# this includes static assets.
# These purposefully have non-standard names
# to avoid conflict with Vercel.

AWS_S3_ACCESS_KEY_ID=
AWS_S3_SECRET_ACCESS_KEY=
AWS_S3_REGION=
AWS_S3_BUCKET_NAME=
NEXT_PUBLIC_CDN_URL=


# === Sentry ===

NEXT_PUBLIC_SENTRY_DSN=

# Only required to upload sourcemaps
SENTRY_ORG=
SENTRY_PROJECT=
SENTRY_AUTH_TOKEN=

# Only required if sentry for organization
# Ex: https://sentry.ORG.com/
SENTRY_URL=

# For sourcemaps to work with server-side exceptions, the file path of the
# uploaded .map file needs to match the file paths in Error.stack. In Node.js,
# Error.stack file paths are absolute. Since the .map files we upload to Sentry
# have relative paths (~/_next), Error.stack needs to be rewritten to also use
# relative paths, which is handled in Sentry.init via Sentry's RewriteFrames
# integration.
#
# Normally, the root directory could be detected with __dirname, but __dirname
# isn't yet supported in Vercel serverless functions:
# https://github.com/vercel/next.js/issues/8251
#
# To work around this issue, provide the root directory containing Next.js's
# build output here. In the Vercel environment, this is /var/task/.
NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR=


## == Build / Deploy

# Custom docker repository to use. Leave blank to use default.
DOCKER_REPO=
